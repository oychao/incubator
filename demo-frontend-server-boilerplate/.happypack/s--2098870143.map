{"version":3,"sources":["app/store/reducers.js"],"names":["Api","users","state","action","type","user","filter","idx","appUsers","fetchingUser","addingUser","deletingUser","fetchingUserEpic","action$","ofType","switchMap","ajax","get","API_USER","flatMap","concat","of","payload","response","addingUserEpic","post","map","mapTo","rootUserEpic","userReducers"],"mappings":";;;;;;;AAIA;;AACA;;AACA;;AAEA;;AAeA;;IAAYA,G;;;;oMAvBZ;;;;AAyBA;AACA,IAAMC,QAAQ,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,OAAOC,IAAf;AACE;AACE,0CACKF,KADL,IAEEC,OAAOE,IAFT;AAIF;AACE,aAAOH,MAAMI,MAAN,CAAa,UAACD,IAAD,EAAOE,GAAP,EAAe;AACjC,eAAOA,QAAQJ,OAAOI,GAAtB;AACD,OAFM,CAAP;AAGF;AACE,0CACKL,KADL,sBAEKC,OAAOF,KAFZ;AAIF;AACE,aAAOC,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA;AACA,IAAMM,WAAW,SAAXA,QAAW,GAIH;AAAA,MAJIN,KAIJ,uEAJY;AACxBO,kBAAc,KADU;AAExBC,gBAAY,KAFY;AAGxBC,kBAAc;AAHU,GAIZ;AAAA,MAAXR,MAAW;;AACZ,UAAQA,OAAOC,IAAf;AACE;AACEF,YAAMO,YAAN,GAAqB,IAArB;AACA,aAAOP,KAAP;AACF;AACEA,YAAMO,YAAN,GAAqB,KAArB;AACA,aAAOP,KAAP;AACF;AACEA,YAAMQ,UAAN,GAAmB,IAAnB;AACA,aAAOR,KAAP;AACF;AACEA,YAAMQ,UAAN,GAAmB,KAAnB;AACA,aAAOR,KAAP;AACF;AACEA,YAAMS,YAAN,GAAqB,IAArB;AACA,aAAOT,KAAP;AACF;AACEA,YAAMS,YAAN,GAAqB,KAArB;AACA,aAAOT,KAAP;AACF;AACE,aAAOA,KAAP;AApBJ;AAsBD,CA3BD;;AA6BA;AACO,IAAMU,8CAAmB,SAAnBA,gBAAmB;AAAA,SAC9BC,QAAQC,MAAR,6BACGC,SADH,CACa;AAAA,WACT,uBAAWC,IAAX,CAAgBC,GAAhB,CAAoBjB,IAAIkB,QAAxB,EACGC,OADH,CACW;AAAA,aACP,uBAAWC,MAAX,CACE,uBAAWC,EAAX,CAAc,2BAAaC,QAAQC,QAArB,CAAd,CADF,EAEE,uBAAWF,EAAX,CAAc,uCAAd,CAFF,CADO;AAAA,KADX,CADS;AAAA,GADb,CAD8B;AAAA,CAAzB;;AAaA,IAAMG,0CAAiB,SAAjBA,cAAiB;AAAA,SAC5BX,QAAQC,MAAR,2BACGC,SADH,CACa;AAAA,WACT,uBAAWC,IAAX,CAAgBS,IAAhB,CAAqBzB,IAAIkB,QAAzB,EAAmCf,OAAOE,IAA1C,EACGqB,GADH,mBAEGC,KAFH,CAES,uBAAWN,EAAX,gCAFT,CADS;AAAA,GADb,CAD4B;AAAA,CAAvB;;AASA,IAAMO,sCAAe,mCAC1BhB,gBAD0B,EAE1BY,cAF0B,CAArB;;AAKA,IAAMK,sCAAe;AAC1B5B,cAD0B;AAE1BO;AAF0B,CAArB","file":"reducers.js","sourceRoot":"/Users/ouyangcharles/git/incubator/demo-frontend-server-boilerplate","sourcesContent":["/**\n * Created by 欧阳 超 on 2017/01/16\n */\n\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\nimport { combineEpics } from 'redux-observable';\n\nimport {\n  ADD_USER,\n  DELETE_USER,\n  RECEIVE_USERS,\n  APP_FETCHING_USER,\n  APP_FETCHING_USER_FINISHED,\n  APP_ADDING_USER,\n  APP_ADDING_USER_FINISHED,\n  APP_DELETING_USER,\n  APP_DELETING_USER_FINISHED,\n  addUser,\n  receiveUsers,\n  appAddingUserFinished,\n  appFetchingUserFinished,\n} from './actions';\nimport * as Api from './_api.config';\n\n// user state reducer\nconst users = (state = [], action) => {\n  switch (action.type) {\n    case ADD_USER:\n      return [\n        ...state,\n        action.user\n      ];\n    case DELETE_USER:\n      return state.filter((user, idx) => {\n        return idx !== action.idx;\n      });\n    case RECEIVE_USERS:\n      return [\n        ...state,\n        ...action.users,\n      ];\n    default:\n      return state;\n  }\n};\n\n// app state reducer\nconst appUsers = (state = {\n  fetchingUser: false,\n  addingUser: false,\n  deletingUser: false,\n}, action) => {\n  switch (action.type) {\n    case APP_FETCHING_USER:\n      state.fetchingUser = true;\n      return state;\n    case APP_FETCHING_USER_FINISHED:\n      state.fetchingUser = false;\n      return state;\n    case APP_ADDING_USER:\n      state.addingUser = true;\n      return state;\n    case APP_ADDING_USER_FINISHED:\n      state.addingUser = false;\n      return state;\n    case APP_DELETING_USER:\n      state.deletingUser = true;\n      return state;\n    case APP_DELETING_USER_FINISHED:\n      state.deletingUser = false;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// epics\nexport const fetchingUserEpic = action$ => (\n  action$.ofType(APP_FETCHING_USER)\n    .switchMap(() =>\n      Observable.ajax.get(Api.API_USER)\n        .flatMap(payload =>\n          Observable.concat(\n            Observable.of(receiveUsers(payload.response)),\n            Observable.of(appFetchingUserFinished())\n          )\n        )\n    )\n);\n\nexport const addingUserEpic = action$ => (\n  action$.ofType(APP_ADDING_USER)\n    .switchMap(action =>\n      Observable.ajax.post(Api.API_USER, action.user)\n        .map(addUser)\n        .mapTo(Observable.of(appAddingUserFinished))\n    )\n);\n\nexport const rootUserEpic = combineEpics(\n  fetchingUserEpic,\n  addingUserEpic\n);\n\nexport const userReducers = {\n  users,\n  appUsers,\n};\n"]}